# -*- mode: org -*-
# -*- coding: utf-8 -*-
#+startup: beamer
#+STARTUP: overview
#+STARTUP: indent
#+TAGS: noexport(n)

#+TITLE: PhenoVis in R
#+SUBTITLE: Planned Design and Roadmap

#+LaTeX_CLASS: beamer
#+LaTeX_CLASS_OPTIONS: [10pt,xcolor=dvipsnames,presentation]
#+OPTIONS:   H:1 num:t toc:nil \n:nil @:t ::t |:t ^:nil -:t f:t *:t <:t
#+LATEX_HEADER: \usedescriptionitemofwidthas{bl}
#+LATEX_HEADER: \usepackage{ifthen,figlatex,amsmath,amstext,xspace}
#+LATEX_HEADER: \usepackage{boxedminipage,xspace,multicol}
#+LATEX_HEADER: \usepackage{subfigure}
#+LATEX_HEADER: \usepackage{fancyvrb}
#+LATEX_HEADER: \usetheme{Madrid}
#+LATEX_HEADER: \usepackage{lmodern}
#+LATEX_HEADER: \usecolortheme[named=BrickRed]{structure}
#+LATEX_HEADER:  %\usepackage[colorlinks=true,citecolor=pdfcitecolor,urlcolor=pdfurlcolor,linkcolor=pdflinkcolor,pdfborder={0 0 0}]{hyperref}
#+LATEX_HEADER: \usepackage[round-precision=3,round-mode=figures,scientific-notation=true]{siunitx}
#+LATEX_HEADER: \setbeamertemplate{footline}[frame number]
#+LATEX_HEADER: \setbeamertemplate{navigation symbols}{}
#+LATEX_HEADER: \usepackage{DejaVuSansMono}
#+LATEX_HEADER: \AtBeginDocument{
#+LATEX_HEADER:   \definecolor{pdfurlcolor}{rgb}{0,0,0.6}
#+LATEX_HEADER:   \definecolor{pdfcitecolor}{rgb}{0,0.6,0}
#+LATEX_HEADER:   \definecolor{pdflinkcolor}{rgb}{0.6,0,0}
#+LATEX_HEADER:   \definecolor{light}{gray}{.85}
#+LATEX_HEADER:   \definecolor{vlight}{gray}{.95}
#+LATEX_HEADER: }
#+LATEX_HEADER: \usepackage{appendixnumberbeamer}
#+LATEX_HEADER: \usepackage{relsize}
#+LATEX_HEADER: \usepackage{color,colortbl}
#+LATEX_HEADER: \definecolor{gray98}{rgb}{0.98,0.98,0.98}
#+LATEX_HEADER: \definecolor{gray20}{rgb}{0.20,0.20,0.20}
#+LATEX_HEADER: \definecolor{gray25}{rgb}{0.25,0.25,0.25}
#+LATEX_HEADER: \definecolor{gray16}{rgb}{0.161,0.161,0.161}
#+LATEX_HEADER: \definecolor{gray60}{rgb}{0.6,0.6,0.6}
#+LATEX_HEADER: \definecolor{gray30}{rgb}{0.3,0.3,0.3}
#+LATEX_HEADER: \definecolor{bgray}{RGB}{248, 248, 248}
#+LATEX_HEADER: \definecolor{amgreen}{RGB}{77, 175, 74}
#+LATEX_HEADER: \definecolor{amblu}{RGB}{55, 126, 184}
#+LATEX_HEADER: \definecolor{amred}{RGB}{228,26,28}
#+LATEX_HEADER: \usepackage[procnames]{listings}
#+LATEX_HEADER: \lstset{ %
#+LATEX_HEADER:  backgroundcolor=\color{gray98},    % choose the background color; you must add \usepackage{color} or \usepackage{xcolor}
#+LATEX_HEADER:  basicstyle=\tt\prettysmall,      % the size of the fonts that are used for the code
#+LATEX_HEADER:  breakatwhitespace=false,          % sets if automatic breaks should only happen at whitespace
#+LATEX_HEADER:  breaklines=true,                  % sets automatic line breaking
#+LATEX_HEADER:  showlines=true,                  % sets automatic line breaking
#+LATEX_HEADER:  captionpos=b,                     % sets the caption-position to bottom
#+LATEX_HEADER:  commentstyle=\color{gray30},      % comment style
#+LATEX_HEADER:  extendedchars=true,               % lets you use non-ASCII characters; for 8-bits encodings only, does not work with UTF-8
#+LATEX_HEADER:  frame=single,                     % adds a frame around the code
#+LATEX_HEADER:  keepspaces=true,                  % keeps spaces in text, useful for keeping indentation of code (possibly needs columns=flexible)
#+LATEX_HEADER:  keywordstyle=\color{amblu},       % keyword style
#+LATEX_HEADER:  procnamestyle=\color{amred},       % procedures style
#+LATEX_HEADER:  language=C,             % the language of the code
#+LATEX_HEADER:  numbers=none,                     % where to put the line-numbers; possible values are (none, left, right)
#+LATEX_HEADER:  numbersep=5pt,                    % how far the line-numbers are from the code
#+LATEX_HEADER:  numberstyle=\tiny\color{gray20}, % the style that is used for the line-numbers
#+LATEX_HEADER:  rulecolor=\color{gray20},          % if not set, the frame-color may be changed on line-breaks within not-black text (e.g. comments (green here))
#+LATEX_HEADER:  showspaces=false,                 % show spaces everywhere adding particular underscores; it overrides 'showstringspaces'
#+LATEX_HEADER:  showstringspaces=false,           % underline spaces within strings only
#+LATEX_HEADER:  showtabs=false,                   % show tabs within strings adding particular underscores
#+LATEX_HEADER:  stepnumber=2,                     % the step between two line-numbers. If it's 1, each line will be numbered
#+LATEX_HEADER:  stringstyle=\color{amdove},       % string literal style
#+LATEX_HEADER:  tabsize=2,                        % sets default tabsize to 2 spaces
#+LATEX_HEADER:  % title=\lstname,                    % show the filename of files included with \lstinputlisting; also try caption instead of title
#+LATEX_HEADER:  procnamekeys={call}
#+LATEX_HEADER: }
#+LATEX_HEADER: \newcommand{\prettysmall}{\fontsize{6}{8}\selectfont}
#+LATEX_HEADER: \newcommand{\quitesmall}{\fontsize{8}{10}\selectfont}

#+LATEX_HEADER: \usepackage{tikzsymbols}
#+LATEX_HEADER: \def\smiley{\Smiley[1][green!80!white]}
#+LATEX_HEADER: \def\frowny{\Sadey[1][red!80!white]}
#+LATEX_HEADER: \def\winkey{\Winkey[1][yellow]}
#+LATEX_HEADER: \def\smileyitem{\setbeamertemplate{itemize item}{\scriptsize\raise1.25pt\hbox{\donotcoloroutermaths\color{black}$\smiley$}}}
#+LATEX_HEADER: \def\frownyitem{\setbeamertemplate{itemize item}{\scriptsize\raise1.25pt\hbox{\donotcoloroutermaths\color{black}$\frowny$}}}
#+LATEX_HEADER: \def\restoreitem{\setbeamertemplate{itemize item}[ball]}
#+LATEX_HEADER: \def\smileysubitem{\setbeamertemplate{itemize subitem}{\scriptsize\raise1.25pt\hbox{\donotcoloroutermaths\color{black}$\smiley$}}}
#+LATEX_HEADER: \def\frownysubitem{\setbeamertemplate{itemize subitem}{\scriptsize\raise1.25pt\hbox{\donotcoloroutermaths\color{black}$\frowny$}}}
#+LATEX_HEADER: \def\restoresubitem{\setbeamertemplate{itemize subitem}[ball]}

#+BIND: org-latex-title-command ""
#+LaTeX: \urlstyle{sf}
#+LaTeX: \let\alert=\structure
#+LaTeX: \let\epsilon=\varepsilon
#+LaTeX: \let\leq=\leqslant
#+LaTeX: \let\geq=\geqslant 
#+BEGIN_EXPORT LaTeX
\let\oldtexttt=\texttt
\def\texttt#1{\oldtexttt{\smaller[1]{#1}}}
\def\starpu{StarPU\xspace}
\def\qrmspu{qr\_mumps\xspace}
\def\DGEMM{\texttt{dgemm}\xspace}
\def\SGEMM{\texttt{sgemm}\xspace}
\def\DGEMMs{\texttt{dgemm}s\xspace}
\def\DPOTRF{\texttt{dpotrf}\xspace}
\def\DSYRK{\texttt{dsyrk}\xspace}
\def\DTRSM{\texttt{dtrsm}\xspace}
\def\Idle{\texttt{Idle}\xspace}
\definecolor{dpotrfcolor}{rgb}{0.8675,0,0}
\definecolor{dgemmcolor}{rgb}{0,0.5625,0}
\definecolor{dsyrkcolor}{rgb}{0.5625,0,0.5625}
\definecolor{dtrsmcolor}{rgb}{0,0,0.8675}
#+END_EXPORT

#+BEGIN_EXPORT LaTeX  
{\setbeamertemplate{footline}{} 

\author{\underline{\textbf{Lucas Mello Schnorr}}, João Comba \newline\newline\newline
\includegraphics[width=.85\linewidth,height=15mm]{../../img/cpm_2007_v2_frontpage.pdf}}

\date{ePhenology Workshop \newline Campinas, Brazil -- December 1st, 2017}

\titlegraphic{\vspace{-.5cm}
    \includegraphics[scale=0.99]{./logo/ufrgs2.png}
  %  \includegraphics[scale=0.50]{./logo/capes2.png}
}


\maketitle
}
#+END_EXPORT

* Context

PhenoVis Publication
- Roger A. Leite, Lucas Mello Schnorr, Jurandy Almeida, Bruna
  Alberton, Leonor Patricia C. Morellato, Ricardo da S. Torres, and
  João L.D. Comba. 2016. *PhenoVis - A tool for visual phenological analysis of digital camera images using chronological percentage maps*. Inf. Sci. 372, C (December 2016), 181-195. DOI:https://doi.org/10.1016/j.ins.2016.08.052

#+latex: \vfill

Main novelties
- Self-contained tool for phenology studies
- Histogram for each photo (phenocam) instead of an average
- Chronological Percentage Maps (CPM)
  - Stacked bar charts for multiple histogram representations
  - It becomes a much richer signature of each phenocam site along time

* Chronological Percentage Maps (CPM) - an Overview

For each phenocam image
- The metric =G/(R+G+B)= is calculated for every pixel
- A histogram is calculated instead of the average

CPM
- Each histogram \rightarrow stacked bar (one color for each bin, height from bin size)
- Many stacked bars (one for every image) are put side by side

#+Latex: \vfill

[[../../img/cpm_2007_v2.pdf]]

#+BEGIN_CENTER
Japanese TKY dataset, year 2007 only.
#+END_CENTER

* Technical aspects of PhenoVis

Advantages
- Works neatly for the dataset it was developed to
- Fast development of ideas in a prototype

Drawbacks
- Code is written in Java with https://processing.org/
  - Many source code lines; not so expressive language
- Many hard-code assumptions in the code (image res.; GUI layout)
- User support is hard; difficult to adapt
- Absence of workflow reproducibility

* Towards a R workflow

Not so recent evolution from October 2016 (Open Source, Open Science)

https://github.com/schnorr/phenology (code is fully available - GPLv3)

#+latex: \vfill\pause

Characteristics
- IO and compute intensive tasks written in C
  - =pga_hist=: it takes an image, a mask and number of histogram bins
- CPM representation and a *reproducible analysis workflow* in OrgMode/R

[[../../img/cpm_v3_facet.pdf]]

#+latex: \vfill\pause

Problem
- Requires a Linux box with a Debian-based system
  - Compiler, many libraries to deal with JPG files, ...
- Not so friendly to people outside of computer science

* Pure R workflow (Planned)

Planned activities
- Use =Rcpp= to integrate IO and compute intensive tasks in R
  - Update the =pga_hist= implementation to be seamlessly called from R
- Use =Rmd= (R Markdown) to create reproducible workflows
  - Use RStudio for the analysis (GUI)
  - Supposed to work in many operating systems

#+Latex: \vfill

Current status
- Expected development effort: 1 week full-time
- Not yet started

#+BEGIN_CENTER
/We are looking for interested people in ``PhenoVis in R'' with/

/case-studies (phenology datasets) available for hypothesis checking/

/in a reproducible environment (R Markdown) with RStudio./
#+END_CENTER

* Thank you for your Attention! Questions?

#+BEGIN_CENTER
Contact for further details

schnorr@inf.ufrgs.br

http://www.inf.ufrgs.br/~schnorr

http://www.github.com/schnorr/phenology/
#+END_CENTER

* Emacs Setup                                                      :noexport:
  This document has local variables in its postembule, which should
  allow org-mode to work seamlessly without any setup. If you're
  uncomfortable using such variables, you can safely ignore them at
  startup. Exporting may require that you copy them in your .emacs.

# Local Variables:
# eval:    (require 'org-install)
# eval:    (org-babel-do-load-languages 'org-babel-load-languages '( (sh . t) (R . t) (perl . t) (ditaa . t) ))
# eval:    (setq org-confirm-babel-evaluate nil)
# eval:    (setq org-alphabetical-lists t)
# eval:    (setq org-src-fontify-natively t)
# eval:    (add-hook 'org-babel-after-execute-hook 'org-display-inline-images) 
# eval:    (add-hook 'org-mode-hook 'org-display-inline-images)
# eval:    (add-hook 'org-mode-hook 'org-babel-result-hide-all)
# eval:   (setq org-babel-default-header-args:R '((:session . "org-R")))
# eval:   (setq org-export-babel-evaluate nil)
# eval:   (setq ispell-local-dictionary "american")
# eval:   (eval (flyspell-mode t))
# eval:   (setq org-latex-title-command "")
# eval:    (setq org-latex-listings 'minted)
# eval:    (setq org-latex-minted-options '(("bgcolor" "Moccasin") ("style" "tango") ("numbers" "left") ("numbersep" "5pt")))
# End:
