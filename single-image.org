#+TITLE: Lucas's PEG LabBook
#+AUTHOR: Lucas Mello Schnorr
#+LATEX_HEADER: \usepackage[margin=2cm,a4paper]{geometry}
#+STARTUP: overview indent
#+TAGS: Lucas(L) noexport(n) deprecated(d)
#+EXPORT_SELECT_TAGS: export
#+EXPORT_EXCLUDE_TAGS: noexport
#+SEQ_TODO: TODO(t!) STARTED(s!) WAITING(w!) | DONE(d!) CANCELLED(c!) DEFERRED(f!)

This file refers to the analysis of a single image. I will use this
analysis to debug the double histogram plot.

* Dataset description

We have 5281 JPG images.

#+begin_src shell :results output
find Output_PEG/ | grep jpg$ | sort | wc -l
#+end_src

#+RESULTS:
: 5281

The head.
#+begin_src shell :results output
find Output_PEG/ | grep jpg$ | sort | head -n10
#+end_src

#+RESULTS:
#+begin_example
Output_PEG/2014/2014_091_10_1.jpg
Output_PEG/2014/2014_091_10_2.jpg
Output_PEG/2014/2014_091_10_4.jpg
Output_PEG/2014/2014_091_10_5.jpg
Output_PEG/2014/2014_091_11_1.jpg
Output_PEG/2014/2014_091_11_2.jpg
Output_PEG/2014/2014_091_11_3.jpg
Output_PEG/2014/2014_091_12_1.jpg
Output_PEG/2014/2014_091_12_2.jpg
Output_PEG/2014/2014_091_12_3.jpg
#+end_example

* ROI and Community Masks

Masks have been provided by [[https://www.researchgate.net/profile/Bruna_Alberton][Bruna Alberton]].

** ROI                                                              :ATTACH:
:PROPERTIES:
:ID:       d0f675a1-3705-49d1-9c00-576025f3142f
:Attachments: roi1_PEG.bmp roi2_PEG.bmp roi58_PEG.bmp roi60_PEG.bmp roi61_PEG.bmp roi62_PEG.bmp roi65_PEG.bmp roi66_PEG.bmp roi68_PEG.bmp
:END:

** Community                                                        :ATTACH:
:PROPERTIES:
:Attachments: Comunidade-PEG.bmp
:ID:       70a49c79-ab5d-43f4-99d8-5b9d609da83b
:END:

** Lists all masks

#+begin_src shell :results output
find data/d0/f675a1-3705-49d1-9c00-576025f3142f
find data/70/a49c79-ab5d-43f4-99d8-5b9d609da83b
#+end_src

#+RESULTS:
#+begin_example
data/d0/f675a1-3705-49d1-9c00-576025f3142f
data/d0/f675a1-3705-49d1-9c00-576025f3142f/roi60_PEG.bmp
data/d0/f675a1-3705-49d1-9c00-576025f3142f/roi66_PEG.bmp
data/d0/f675a1-3705-49d1-9c00-576025f3142f/roi58_PEG.bmp
data/d0/f675a1-3705-49d1-9c00-576025f3142f/roi65_PEG.bmp
data/d0/f675a1-3705-49d1-9c00-576025f3142f/roi68_PEG.bmp
data/d0/f675a1-3705-49d1-9c00-576025f3142f/roi2_PEG.bmp
data/d0/f675a1-3705-49d1-9c00-576025f3142f/roi61_PEG.bmp
data/d0/f675a1-3705-49d1-9c00-576025f3142f/roi1_PEG.bmp
data/d0/f675a1-3705-49d1-9c00-576025f3142f/roi62_PEG.bmp
data/70/a49c79-ab5d-43f4-99d8-5b9d609da83b
data/70/a49c79-ab5d-43f4-99d8-5b9d609da83b/Comunidade-PEG.bmp
#+end_example

* Analysis
** Dependencies
In order to reproduce this analysis, you need the following packages:
#+BEGIN_SRC R
installye.packages(c('tidyverse', 'colorspace'), repos = 'http://cran.us.r-project.org')
#+END_SRC

#+RESULTS:

** Masks
*** Convert all masks to JPG in RGB mode

Masks should be in the JPEG file format using a 24bit depth (24bit RGB
without alpha). Since the masks that have been provided are in the BMP
file format in grayscale (8bit only), we need to convert them. This
procedure is done only once since we are saving the JPEG masks in this
repository.

#+name: mask_bmp2jpg
#+begin_src shell :results output
for mask in $(find data/d0/f675a1-3705-49d1-9c00-576025f3142f | grep bmp$) $(find data/70/a49c79-ab5d-43f4-99d8-5b9d609da83b | grep bmp$);
do
    FILE=$(basename $mask)
    DIR=$(dirname $mask)
    pushd $DIR
    convert $FILE -type TrueColor $(basename $FILE .bmp).jpg
    popd
done
#+end_src

#+RESULTS: mask_bmp2jpg
#+begin_example
~/Mac SDCard/phenology/data/d0/f675a1-3705-49d1-9c00-576025f3142f ~/Mac SDCard/phenology
~/Mac SDCard/phenology
~/Mac SDCard/phenology/data/d0/f675a1-3705-49d1-9c00-576025f3142f ~/Mac SDCard/phenology
~/Mac SDCard/phenology
~/Mac SDCard/phenology/data/d0/f675a1-3705-49d1-9c00-576025f3142f ~/Mac SDCard/phenology
~/Mac SDCard/phenology
~/Mac SDCard/phenology/data/d0/f675a1-3705-49d1-9c00-576025f3142f ~/Mac SDCard/phenology
~/Mac SDCard/phenology
~/Mac SDCard/phenology/data/d0/f675a1-3705-49d1-9c00-576025f3142f ~/Mac SDCard/phenology
~/Mac SDCard/phenology
~/Mac SDCard/phenology/data/d0/f675a1-3705-49d1-9c00-576025f3142f ~/Mac SDCard/phenology
~/Mac SDCard/phenology
~/Mac SDCard/phenology/data/d0/f675a1-3705-49d1-9c00-576025f3142f ~/Mac SDCard/phenology
~/Mac SDCard/phenology
~/Mac SDCard/phenology/data/d0/f675a1-3705-49d1-9c00-576025f3142f ~/Mac SDCard/phenology
~/Mac SDCard/phenology
~/Mac SDCard/phenology/data/d0/f675a1-3705-49d1-9c00-576025f3142f ~/Mac SDCard/phenology
~/Mac SDCard/phenology
~/Mac SDCard/phenology/data/70/a49c79-ab5d-43f4-99d8-5b9d609da83b ~/Mac SDCard/phenology
~/Mac SDCard/phenology
#+end_example

List the new JPEG masks after conversion:

#+begin_src shell :results output
find data/d0/f675a1-3705-49d1-9c00-576025f3142f | grep jpg
find data/70/a49c79-ab5d-43f4-99d8-5b9d609da83b | grep jpg
#+end_src

#+RESULTS:
#+begin_example
data/d0/f675a1-3705-49d1-9c00-576025f3142f/roi1_PEG.jpg
data/d0/f675a1-3705-49d1-9c00-576025f3142f/roi2_PEG.jpg
data/d0/f675a1-3705-49d1-9c00-576025f3142f/roi58_PEG.jpg
data/d0/f675a1-3705-49d1-9c00-576025f3142f/roi60_PEG.jpg
data/d0/f675a1-3705-49d1-9c00-576025f3142f/roi61_PEG.jpg
data/d0/f675a1-3705-49d1-9c00-576025f3142f/roi62_PEG.jpg
data/d0/f675a1-3705-49d1-9c00-576025f3142f/roi65_PEG.jpg
data/d0/f675a1-3705-49d1-9c00-576025f3142f/roi66_PEG.jpg
data/d0/f675a1-3705-49d1-9c00-576025f3142f/roi68_PEG.jpg
data/70/a49c79-ab5d-43f4-99d8-5b9d609da83b/Comunidade-PEG.jpg
#+end_example

*** Convert all masks to 1280 x 960

Masks should have the same dimensions as the pictures in the dataset.

This procedure has already been executed, results have been committed.

#+header: dep0=mask_bmp2jpg
#+begin_src shell :results output
for mask in $(find data/d0/f675a1-3705-49d1-9c00-576025f3142f | grep jpg$ | grep -v "\-2") $(find data/70/a49c79-ab5d-43f4-99d8-5b9d609da83b | grep jpg$ | grep -v "\-2");
do
    FILE=$(basename $mask)
    DIR=$(dirname $mask)
    echo $mask
    jpeginfo $mask
    pushd $DIR
    convert $FILE -resize 1280x960 -type TrueColor $(basename $FILE .jpg)-2.jpg
    mv $(basename $FILE .jpg)-2.jpg $FILE
    popd
done
#+end_src

#+RESULTS:
#+begin_example
data/d0/f675a1-3705-49d1-9c00-576025f3142f/roi1_PEG.jpg
~/Mac SDCard/phenology/data/d0/f675a1-3705-49d1-9c00-576025f3142f ~/Mac SDCard/phenology
~/Mac SDCard/phenology
data/d0/f675a1-3705-49d1-9c00-576025f3142f/roi2_PEG.jpg
~/Mac SDCard/phenology/data/d0/f675a1-3705-49d1-9c00-576025f3142f ~/Mac SDCard/phenology
~/Mac SDCard/phenology
data/d0/f675a1-3705-49d1-9c00-576025f3142f/roi58_PEG.jpg
~/Mac SDCard/phenology/data/d0/f675a1-3705-49d1-9c00-576025f3142f ~/Mac SDCard/phenology
~/Mac SDCard/phenology
data/d0/f675a1-3705-49d1-9c00-576025f3142f/roi60_PEG.jpg
~/Mac SDCard/phenology/data/d0/f675a1-3705-49d1-9c00-576025f3142f ~/Mac SDCard/phenology
~/Mac SDCard/phenology
data/d0/f675a1-3705-49d1-9c00-576025f3142f/roi61_PEG.jpg
~/Mac SDCard/phenology/data/d0/f675a1-3705-49d1-9c00-576025f3142f ~/Mac SDCard/phenology
~/Mac SDCard/phenology
data/d0/f675a1-3705-49d1-9c00-576025f3142f/roi62_PEG.jpg
~/Mac SDCard/phenology/data/d0/f675a1-3705-49d1-9c00-576025f3142f ~/Mac SDCard/phenology
~/Mac SDCard/phenology
data/d0/f675a1-3705-49d1-9c00-576025f3142f/roi65_PEG.jpg
~/Mac SDCard/phenology/data/d0/f675a1-3705-49d1-9c00-576025f3142f ~/Mac SDCard/phenology
~/Mac SDCard/phenology
data/d0/f675a1-3705-49d1-9c00-576025f3142f/roi66_PEG.jpg
~/Mac SDCard/phenology/data/d0/f675a1-3705-49d1-9c00-576025f3142f ~/Mac SDCard/phenology
~/Mac SDCard/phenology
data/d0/f675a1-3705-49d1-9c00-576025f3142f/roi68_PEG.jpg
~/Mac SDCard/phenology/data/d0/f675a1-3705-49d1-9c00-576025f3142f ~/Mac SDCard/phenology
~/Mac SDCard/phenology
data/70/a49c79-ab5d-43f4-99d8-5b9d609da83b/Comunidade-PEG.jpg
~/Mac SDCard/phenology/data/70/a49c79-ab5d-43f4-99d8-5b9d609da83b ~/Mac SDCard/phenology
~/Mac SDCard/phenology
#+end_example


** Pictures

Capture names from all the sample images
#+name: peg
#+begin_src R :results output :session analysis :exports both
suppressMessages(library(tidyverse))
options(crayon.enabled = FALSE)
df.peg <- tibble(Picture.Filename=list.files("Output_PEG", pattern="jpg", recursive=TRUE, full.names=TRUE)) %>%
    separate(Picture.Filename, sep="/", into=c("A", "B", "Picture"), remove=FALSE) %>% select(-A, -B) %>%
    mutate(Picture = gsub(".jpg", "", Picture))
df.peg
#+end_src

#+RESULTS: peg
#+begin_example
# A tibble: 5,281 x 2
   Picture.Filename                  Picture      
   <chr>                             <chr>        
 1 Output_PEG/2014/2014_091_10_1.jpg 2014_091_10_1
 2 Output_PEG/2014/2014_091_10_2.jpg 2014_091_10_2
 3 Output_PEG/2014/2014_091_10_4.jpg 2014_091_10_4
 4 Output_PEG/2014/2014_091_10_5.jpg 2014_091_10_5
 5 Output_PEG/2014/2014_091_11_1.jpg 2014_091_11_1
 6 Output_PEG/2014/2014_091_11_2.jpg 2014_091_11_2
 7 Output_PEG/2014/2014_091_11_3.jpg 2014_091_11_3
 8 Output_PEG/2014/2014_091_12_1.jpg 2014_091_12_1
 9 Output_PEG/2014/2014_091_12_2.jpg 2014_091_12_2
10 Output_PEG/2014/2014_091_12_3.jpg 2014_091_12_3
# ... with 5,271 more rows
#+end_example

Let's keep only one image, say, the one with index 42. 

#+BEGIN_SRC R :session analysis
df.peg <- df.peg[42,] %>%
  select(Picture.Filename, Picture)
df.peg %>% as.data.frame
#+END_SRC

#+RESULTS:
| Output_PEG/2014/2014_092_08_5.jpg | 2014_092_08_5 |

** Overview
*** HSV with single, non static V
As discussed with Lucas, we will try to plot a single histogram (as
previous implementations already did). 

Instead of fixing the V value to 1, however, we will be sampling the V
values (using the double histogram method) and assigning the mode of V
to the whole data set.

Let's start by loading the necessary packages into our session and doing a little bit of setup...
#+BEGIN_SRC R :session analysis
suppressMessages(library(tidyverse))
suppressMessages(library(colorspace))
suppressMessages(library(phenovisr))
options(crayon.enabled = FALSE)
#+END_SRC

#+RESULTS:
: FALSE

Now, let's read the mask we will be using into a tibble.
#+BEGIN_SRC R :session analysis2 :results output
df.masks <- tibble(Mask.Filename = list.files('data/70', 
  recursive = TRUE, 
  pattern = 'jpg', 
  full.names = TRUE)) %>%
    separate(Mask.Filename, sep = '/', into = c('A', 'B', 'C', 'Mask'), remove = FALSE) %>%
    mutate(Mask = gsub('.jpg', '', Mask)) %>%
    mutate(Mask = gsub('-', '_', Mask)) %>%
    select(-A, -B, -C)
    df.masks
#+END_SRC

#+RESULTS:
: # A tibble: 1 x 2
:   Mask.Filename                                                 Mask          
:   <chr>                                                         <chr>         
: 1 data/70/a49c79-ab5d-43f4-99d8-5b9d609da83b/Comunidade-PEG.jpg Comunidade_PEG

Then, let's read the description of the images into another tibble
#+BEGIN_SRC R :session analysis2 :results output
df.peg <- tibble(Picture.Filename = 
  list.files('Output_PEG', pattern = 'jpg', recursive = TRUE, full.names = TRUE)) %>%
    separate(Picture.Filename, sep = '/', into = c('A', 'B', 'Picture'), remove = FALSE) %>%
    select(-A, -B) %>%
    mutate(Picture = gsub('.jpg', '', Picture))
df.peg
#+END_SRC

#+RESULTS:
#+begin_example
# A tibble: 5,281 x 2
   Picture.Filename                  Picture      
   <chr>                             <chr>        
 1 Output_PEG/2014/2014_091_10_1.jpg 2014_091_10_1
 2 Output_PEG/2014/2014_091_10_2.jpg 2014_091_10_2
 3 Output_PEG/2014/2014_091_10_4.jpg 2014_091_10_4
 4 Output_PEG/2014/2014_091_10_5.jpg 2014_091_10_5
 5 Output_PEG/2014/2014_091_11_1.jpg 2014_091_11_1
 6 Output_PEG/2014/2014_091_11_2.jpg 2014_091_11_2
 7 Output_PEG/2014/2014_091_11_3.jpg 2014_091_11_3
 8 Output_PEG/2014/2014_091_12_1.jpg 2014_091_12_1
 9 Output_PEG/2014/2014_091_12_2.jpg 2014_091_12_2
10 Output_PEG/2014/2014_091_12_3.jpg 2014_091_12_3
# ... with 5,271 more rows
#+end_example

To make the plots faster, I'll get rid of most images and keep only
one image per day
#+BEGIN_SRC R :session analysis2 :results output
df.peg <- df.peg %>%
  separate(Picture, sep = '_', into = c('Year', 'Day', 'Hour', 'Sequence'), remove = FALSE) %>%
  mutate(Sequence = as.numeric(Sequence)) %>%
  mutate(Hour = as.numeric(Hour)) %>%
  filter(Sequence == 1) %>%
  filter(Hour == 10) %>%
  select(Picture.Filename, Picture)
df.peg
#+END_SRC

#+RESULTS:
#+begin_example
# A tibble: 122 x 2
   Picture.Filename                  Picture      
   <chr>                             <chr>        
 1 Output_PEG/2014/2014_091_10_1.jpg 2014_091_10_1
 2 Output_PEG/2014/2014_092_10_1.jpg 2014_092_10_1
 3 Output_PEG/2014/2014_093_10_1.jpg 2014_093_10_1
 4 Output_PEG/2014/2014_094_10_1.jpg 2014_094_10_1
 5 Output_PEG/2014/2014_095_10_1.jpg 2014_095_10_1
 6 Output_PEG/2014/2014_096_10_1.jpg 2014_096_10_1
 7 Output_PEG/2014/2014_097_10_1.jpg 2014_097_10_1
 8 Output_PEG/2014/2014_098_10_1.jpg 2014_098_10_1
 9 Output_PEG/2014/2014_099_10_1.jpg 2014_099_10_1
10 Output_PEG/2014/2014_100_10_1.jpg 2014_100_10_1
# ... with 112 more rows
#+end_example

We have 122 pictures, which is relatively fast to process. Now we need
to create all possible combinations of masks and pictures.
#+BEGIN_SRC R :session analysis2 :results output
df.join <- df.masks %>%
  mutate(dummy = TRUE) %>%
  group_by(Mask) %>%
  left_join(df.peg %>% mutate(dummy = TRUE), by = 'dummy') %>%
  select(-dummy)
df.join
#+END_SRC

#+RESULTS:
#+begin_example
# A tibble: 122 x 4
# Groups:   Mask [1]
   Mask.Filename                     Mask      Picture.Filename       Picture  
   <chr>                             <chr>     <chr>                  <chr>    
 1 data/70/a49c79-ab5d-43f4-99d8-5b… Comunida… Output_PEG/2014/2014_… 2014_091…
 2 data/70/a49c79-ab5d-43f4-99d8-5b… Comunida… Output_PEG/2014/2014_… 2014_092…
 3 data/70/a49c79-ab5d-43f4-99d8-5b… Comunida… Output_PEG/2014/2014_… 2014_093…
 4 data/70/a49c79-ab5d-43f4-99d8-5b… Comunida… Output_PEG/2014/2014_… 2014_094…
 5 data/70/a49c79-ab5d-43f4-99d8-5b… Comunida… Output_PEG/2014/2014_… 2014_095…
 6 data/70/a49c79-ab5d-43f4-99d8-5b… Comunida… Output_PEG/2014/2014_… 2014_096…
 7 data/70/a49c79-ab5d-43f4-99d8-5b… Comunida… Output_PEG/2014/2014_… 2014_097…
 8 data/70/a49c79-ab5d-43f4-99d8-5b… Comunida… Output_PEG/2014/2014_… 2014_098…
 9 data/70/a49c79-ab5d-43f4-99d8-5b… Comunida… Output_PEG/2014/2014_… 2014_099…
10 data/70/a49c79-ab5d-43f4-99d8-5b… Comunida… Output_PEG/2014/2014_… 2014_100…
# ... with 112 more rows
#+end_example


Okay, we are now ready to calculate the histograms for all the
pictures. Here, we define the function that will perform the
calculations and apply this funciton for all the rows in the df.join
tibble. Depending on the number of pictures, this process may take a
long time.
#+BEGIN_SRC R :session analysis2 :results output
gethist <- function(df, nsubins = 10) {
  mask <- df %>% slice(1) %>% pull(Mask.Filename)
  picture <- df %>% pull(Picture.Filename)
  phenovis_read_mask(mask)
  phenovis_get_HSV_double_histogram(phenovis_H(), picture, nsubins) %>%
    as.tibble
}

df.histograms <- df.join %>%
  do(gethist(.)) %>%
  ungroup()

df.histograms
#+END_SRC

#+RESULTS:
#+begin_example
|======================================================|100% ~0 s remaining     > > # A tibble: 43,920 x 17
   Mask   Name  Width Height Pixels     H  Count     V0    V1    V2    V3    V4
   <chr>  <fct> <int>  <int>  <int> <int>  <int>  <int> <int> <int> <int> <int>
 1 Comun… Outp…  1280    960 508770     0 729875 726071   700   891   671   506
 2 Comun… Outp…  1280    960 508770     1     32      0     4     2     2     4
 3 Comun… Outp…  1280    960 508770     2    330     11    26    33    51    63
 4 Comun… Outp…  1280    960 508770     3    318     44    13    18    39    53
 5 Comun… Outp…  1280    960 508770     4    277     79    34    31    37    28
 6 Comun… Outp…  1280    960 508770     5    772    114    86   115   117   106
 7 Comun… Outp…  1280    960 508770     6    252    125    10    25    19    16
 8 Comun… Outp…  1280    960 508770     7    368    117    16    28    37    41
 9 Comun… Outp…  1280    960 508770     8    359    135    10    13    23    34
10 Comun… Outp…  1280    960 508770     9   1005     58    94   136   189   167
# ... with 43,910 more rows, and 5 more variables: V5 <int>, V6 <int>,
#   V7 <int>, V8 <int>, V9 <int>
#+end_example

For each row, let's get the mode of the collected V values. In case of
a tie (i.e. two bins with the same value), we'll get the last one to
get a more vibrant color.
#+BEGIN_SRC R :session analysis2 :results output
v.bins <- df.histograms %>%
  select(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9)
binsMode <- colnames(v.bins)[max.col(v.bins, ties.method = 'last')]

df.histograms.mode <- df.histograms %>%
  mutate(V.Mode = max.bins)

df.histograms.mode %>% head(10) %>% as.data.frame
#+END_SRC

#+RESULTS:
#+begin_example
             Mask                              Name Width Height Pixels H
1  Comunidade_PEG Output_PEG/2014/2014_091_10_1.jpg  1280    960 508770 0
2  Comunidade_PEG Output_PEG/2014/2014_091_10_1.jpg  1280    960 508770 1
3  Comunidade_PEG Output_PEG/2014/2014_091_10_1.jpg  1280    960 508770 2
4  Comunidade_PEG Output_PEG/2014/2014_091_10_1.jpg  1280    960 508770 3
5  Comunidade_PEG Output_PEG/2014/2014_091_10_1.jpg  1280    960 508770 4
6  Comunidade_PEG Output_PEG/2014/2014_091_10_1.jpg  1280    960 508770 5
7  Comunidade_PEG Output_PEG/2014/2014_091_10_1.jpg  1280    960 508770 6
8  Comunidade_PEG Output_PEG/2014/2014_091_10_1.jpg  1280    960 508770 7
9  Comunidade_PEG Output_PEG/2014/2014_091_10_1.jpg  1280    960 508770 8
10 Comunidade_PEG Output_PEG/2014/2014_091_10_1.jpg  1280    960 508770 9
    Count     V0  V1  V2  V3  V4  V5  V6  V7 V8  V9 V.Mode
1  729875 726071 700 891 671 506 331 252 130 62 261     V0
2      32      0   4   2   2   4   6   4   5  3   2     V5
3     330     11  26  33  51  63  48  37  29 15  17     V4
4     318     44  13  18  39  53  45  43  27 15  21     V4
5     277     79  34  31  37  28  19  15  12  8  14     V0
6     772    114  86 115 117 106  77  65  52 18  22     V3
7     252    125  10  25  19  16  15   8  11  5  18     V0
8     368    117  16  28  37  41  34  33  26 15  21     V0
9     359    135  10  13  23  34  31  40  28 15  30     V0
10   1005     58  94 136 189 167 139  90  64 28  40     V3
#+end_example

Now let's tidy the data. Let's also remove the bins information (V0 to
V9) because they are not relevant anymore.
#+BEGIN_SRC R :session analysis2 :results output
df.histograms.mode.tidy <- df.histograms.mode %>%
  select(-V0, -V1, -V2, -V3, -V4, -V5, -V6, -V7, -V8, -V9) %>%
  mutate(V.Mode = as.integer(substr(V.Mode, 2, 100))) %>%
  mutate(value = V.Mode*360 + H) %>%
  separate(Name, sep = '/', into = c('Dir', 'Year', 'Filename')) %>%
  select(-Dir, -Year) %>%
  separate(Filename, sep = '_', into = c('Year', 'Day', 'Hour', 'Sequence'), convert = TRUE) %>%
  mutate(Sequence = gsub('.jpg', '', Sequence))

df.histograms.mode.tidy %>% head(10) %>% as.data.frame
#+END_SRC

#+RESULTS:
#+begin_example
             Mask Year Day Hour Sequence Width Height Pixels H  Count V.Mode
1  Comunidade_PEG 2014  91   10        1  1280    960 508770 0 729875      0
2  Comunidade_PEG 2014  91   10        1  1280    960 508770 1     32      5
3  Comunidade_PEG 2014  91   10        1  1280    960 508770 2    330      4
4  Comunidade_PEG 2014  91   10        1  1280    960 508770 3    318      4
5  Comunidade_PEG 2014  91   10        1  1280    960 508770 4    277      0
6  Comunidade_PEG 2014  91   10        1  1280    960 508770 5    772      3
7  Comunidade_PEG 2014  91   10        1  1280    960 508770 6    252      0
8  Comunidade_PEG 2014  91   10        1  1280    960 508770 7    368      0
9  Comunidade_PEG 2014  91   10        1  1280    960 508770 8    359      0
10 Comunidade_PEG 2014  91   10        1  1280    960 508770 9   1005      3
   value
1      0
2    365
3    724
4   1084
5   1440
6   1803
7   2160
8   2520
9   2880
10  3243
#+end_example

The last step is to create the color palette
#+BEGIN_SRC R :session analysis2 :results output
palette <- expand.grid(V = seq(0, 9), H = seq(0, 359), S = 1) %>%
  mutate(Color = hex(HSV(H, S, V/10)))

palette %>% as.tibble
#+END_SRC

#+RESULTS:
#+begin_example
# A tibble: 3,600 x 4
       V     H     S Color  
   <int> <int> <dbl> <chr>  
 1     0     0    1. #000000
 2     1     0    1. #1A0000
 3     2     0    1. #330000
 4     3     0    1. #4D0000
 5     4     0    1. #660000
 6     5     0    1. #800000
 7     6     0    1. #990000
 8     7     0    1. #B30000
 9     8     0    1. #CC0000
10     9     0    1. #E60000
# ... with 3,590 more rows
#+end_example

Now, let's finally plot it...
#+BEGIN_SRC R :session analysis2 :results output graphics :file img/PEG_2014_small.png :exports both :width 1400 :height 1000
df.histograms.mode.tidy %>%
  ggplot(aes(x = Day, y = Count/value, fill = as.factor(value))) +
    geom_bar(stat = 'identity', width = 1) + 
    ylim(0, NA) + 
    theme_bw(base_size = 16) +
    xlab('Day of the Year 2014') +
    ylab('Normalized size of bins') +
    scale_fill_manual(values=palette$Color) +
    theme(
      plot.margin = unit(c(0,0,0,0), "cm"),
      legend.spacing = unit(1, "mm"),
      panel.grid = element_blank(),
      legend.position = "top",
      legend.justification = "left",
      legend.box.spacing = unit(0, "pt"),
      legend.box.margin = margin(0,0,0,0),
      legend.title = element_blank()) +
    guides(fill = guide_legend(nrow = 1)) +
    facet_grid(Hour~Mask, scales = 'free')
#+END_SRC

#+RESULTS:
[[file:img/PEG_2014_small.png]]
